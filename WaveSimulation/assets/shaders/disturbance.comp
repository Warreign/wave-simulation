#version 460 core

#extension GL_ARB_shading_language_include : require
#include "compute_macros.glsl"

layout (local_size_x = 4) in;

layout(r32f) readonly uniform image3D in_Grid;
layout(r32f) writeonly uniform image3D out_Grid;

uniform ivec2 u_dim;
uniform ivec2 u_position;
uniform float u_value;

void main()
{
    uint ix = u_position.x;
    uint iz = u_position.y;
    uint itheta = gl_GlobalInvocationID.x;
	if (ix >= 0 && ix < u_dim[X] && iz >= 0 && iz < u_dim[Z])
    {
        vec4 current = imageLoad(in_Grid, ivec3(ix,iz,itheta));
        current.r += u_value;
        imageStore(out_Grid, ivec3(ix,iz,itheta), current);
    }
}
